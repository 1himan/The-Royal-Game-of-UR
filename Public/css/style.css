* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: raga;
}
body {
  overflow: hidden;
  font-family: "Josefin Sans", sans-serif;

  /* font-family: raga; */
  background-image: url(./Images/bg-wooden.jpg);
  letter-spacing: 5px;
  background-size: cover;
}
:root {
  --vw: -10vw;
}

.game-container {
  display: flex;
  flex-direction: column;
}

.game {
  height: 92.6vh;
  width: 100vw;
  display: flex;
  margin: 0 10vw;
  /* background-color: rgb(106, 61, 61); */
}
.game [player-id] {
  display: flex;
  justify-content: center;
}
.game [player-id] {
  flex: 1;
}

.player {
  margin-top: 20px;
  border-radius: 10px;
  height: 100vw;
  max-height: 440px;
  max-width: 172px;
  width: 40vw;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

.player .name {
  width: 140%;
  position: absolute;
  /* left: calc(10vw + var(--vw));  */
  top: 0.5rem;
  left: 1rem;
}
.player .name h3.player_2 {
  position: absolute;
  /* the text inside this is getting wrapped how can I prevent that? */
  right: 15vw;
  white-space: nowrap;
}
@media (min-width: 650px) {
  .player .name h3.player_2 {
    position: absolute;
    /* the text inside this is getting wrapped how can I prevent that? */
    right: 4.5rem !important;
    white-space: nowrap;
  }
}
@media (max-width: 650px) {
  .player .name h3.player_2 {
    margin-right: 0.5rem;
  }
}

/* .player .pieces-container {
  height: 0;
  width: 0;
} */

.player.highlight {
  animation: background-blink 0.7s infinite ease-in-out;

}

@keyframes background-blink {
  50% {
    background-color: rgba(255, 255, 255, 0.28);
  }
}

.player h1 {
  color: white;

  letter-spacing: 4px;
}
@font-face {
  font-family: raga;

  src: url(./Images/Old-Story/Old\ Story.otf);
}
.board {
  /* 21w/54h */
  margin-top: 4rem;
  border-radius: 0.6rem;
  width: 120vw;
  height: 148vw;
  max-width: 14.3rem;
  max-height: 36.7rem;
  background-image: url(./Images/Ur-board.png);
  background-size: contain;
  position: relative;
}
h3 {
  color: white;
}

.player-piece {
  width: 70px;
  height: 70px;
  max-width: 35px;
  max-height: 35px;
  min-width: 27px;
  min-height: 27px;
  border-radius: 5rem;
  position: absolute;
  transform: translate(50%, 50%);
  transition: all 0.2s;
  z-index: 1;
  letter-spacing: 0px;
}


/* CSS for screens with width 650px and above */

@media (min-width: 650px) {
  /* Player 1 pieces */
  .player-piece[player-id="P1"].base-position[piece="0"] {
    position: fixed;
    top: 0rem !important;
    left: -8.35rem !important;
  }
  .player-piece[player-id="P1"].base-position[piece="1"] {
    position: fixed;
    top: 2.8rem !important;
    left: -8.35rem !important;
  }
  .player-piece[player-id="P1"].base-position[piece="2"] {
    position: fixed;
    top: 5.6rem !important;
    left: -8.35rem !important;
  }
  .player-piece[player-id="P1"].base-position[piece="3"] {
    position: fixed;
    top: 8.4rem !important;
    left: -8.35rem !important;
  }
  .player-piece[player-id="P1"].base-position[piece="4"] {
    position: fixed;
    top: 11.2rem !important;
    left: -8.35rem !important;
  }
  .player-piece[player-id="P1"].base-position[piece="5"] {
    position: fixed;
    top: 14rem !important;
    left: -8.35rem !important;
  }
  .player-piece[player-id="P1"].base-position[piece="6"] {
    position: fixed;
    top: 16.8rem !important;
    left: -8.35rem !important;
  }
  /* Add more selectors for each piece as needed */

  /* Player 2 pieces */
  .player-piece[player-id="P2"].base-position[piece="0"] {
    position: fixed;
    top: 0rem !important;
    left: 19.9rem !important;
  }
  .player-piece[player-id="P2"].base-position[piece="1"] {
    position: fixed;
    top: 2.8rem !important;
    left: 19.9rem !important;
  }
  .player-piece[player-id="P2"].base-position[piece="2"] {
    position: fixed;
    top: 5.6rem !important;
    left: 19.9rem !important;
  }
  .player-piece[player-id="P2"].base-position[piece="3"] {
    position: fixed;
    top: 8.4rem !important;
    left: 19.9rem !important;
  }
  .player-piece[player-id="P2"].base-position[piece="4"] {
    position: fixed;
    top: 11.2rem !important;
    left: 19.9rem !important;
  }
  .player-piece[player-id="P2"].base-position[piece="5"] {
    position: fixed;
    top: 14rem !important;
    left: 19.9rem !important;
  }
  .player-piece[player-id="P2"].base-position[piece="6"] {
    position: fixed;
    top: 16.8rem !important;
    left: 19.9rem !important;
  }
  /* Add more selectors for each piece as needed */
}

.player-piece .circle_one {
  border-radius: 1rem;
  width: 0.28rem;
  height: 0.28rem;
  background-color: black;
}
.player-piece .circle_two {
  border-radius: 1rem;
  width: 0.28rem;
  height: 0.28rem;
  background-color: rgb(255, 255, 255);
}
.player-piece .circle_one.circle_1 {
  position: relative;
  top: -0.35rem;
  left: 0.2rem;
}
.player-piece .circle_one.circle_2 {
  position: relative;
  top: -0.35rem;
  left: 0.65rem;
}
.player-piece .circle_one.circle_3 {
  position: relative;
  top: 0.01rem;
  left: 0.04rem;
}
.player-piece .circle_one.circle_4 {
  position: relative;
  top: 0.4rem;
  left: -0.6rem;
}
.player-piece .circle_one.circle_5 {
  position: relative;
  top: 0.4rem;
  left: -0.15rem;
}

.player-piece .circle_two.circle_1 {
  position: relative;
  top: -0.35rem;
  left: 0.2rem;
}
.player-piece .circle_two.circle_2 {
  position: relative;
  top: -0.35rem;
  left: 0.65rem;
}
.player-piece .circle_two.circle_3 {
  position: relative;
  top: 0.01rem;
  left: 0.04rem;
}
.player-piece .circle_two.circle_4 {
  position: relative;
  top: 0.4rem;
  left: -0.6rem;
}
.player-piece .circle_two.circle_5 {
  position: relative;
  top: 0.4rem;
  left: -0.15rem;
}

[player-id="P1"].player-piece {
  background-color: rgb(226, 226, 226);
  display: flex;
  align-items: center;
  color: rgb(0, 0, 0);
  outline: 3px solid rgb(0, 0, 0);
}

[player-id="P2"].player-piece {
  background-color: black;
  display: flex;
  align-items: center;
  color: white;
  outline: 3px solid rgb(95, 95, 95);
}
[player-id="P1"].player-piece h2 {
  cursor: pointer;
}

.player-piece.highlight {
  cursor: pointer;
  border: 3px dashed;
  animation: spin 1.1s infinite linear;
}

@keyframes spin {
  0% {
    transform: translate(50%, 50%) rotate(0deg);
  }
  50% {
    transform: translate(50%, 50%) rotate(180deg) scale(1.2);
  }
  100% {
    transform: translate(50%, 50%) rotate(360deg);
  }
}

.footer {
  background-color: inherit;
  background-size: 100%;
  width: 100vw;
  height: 9vh;
  display: flex;
}
/* .footer h2 {
  color: white;
  margin-left: 20px;
  letter-spacing: 2px;
} */
.row {
  display: flex;
  flex-direction: row;
  width: 100vw;
  align-content: center;
  justify-content: center;
  flex: 1;
}
/* .row div {
  flex: 0.2;
} */
.row .btn {
  width: 17vw;
  max-width: 70px;
  color: white;
  height: 30px;
  border: 3px solid rgb(212, 212, 212);
  background-color: rgb(27, 27, 27);
  border-radius: 8px;
  position: relative;
  /* left: 48vw; */
  font-weight: 800;
  letter-spacing: 2px;
  margin-left: 1rem;
}
.row #dice-btn {
  position: relative;
  left: -3rem;
}
.row #reset-btn {
  position: relative;
  left: 2rem;
}

.row .btn {
  /* other styles */
  top: calc(0.1vw + var(--vw)); /* adjust as needed */
}

@media (min-width: 580px) {
  :root {
    --vw: 0.5vw; /* adjust as needed */
  }
}

.btn:disabled {
  opacity: 0.6;
}
.footer h2 {
  flex: 1;
}
.dice-value {
  /* margin-top: 8px; */
  position: relative;
  font-size: 20px;
  left: 0.3rem;
  bottom: 1.3rem;
  color: white;
}

h2.score span {
  position: relative;
  width: fit-content;
  height: fit-content;
  /* after a particular amount of width I don't want this to move
  how can I do that? */
  top: 11rem;
  color: white;
}
h4.score_ span {
  position: relative;
  width: fit-content;
  height: fit-content;
  /* after a particular amount of width I don't want this to move
  how can I do that? */
  /* top: 92vw; */
  top: 10rem;
  left: 0;
  margin: auto;
  color: white;
}

/* Add a media query */
@media (min-width: 580px) {
  /* Adjust as needed */
  h2.score span {
    top: 18rem; /* Adjust as needed */
    left: -2rem;
  }

  h4.score_ span {
    top: 17rem; /* Adjust as needed */
    left: -2.3rem;
  }

  /* Select the span inside h4 and h2 relative to player-id attribute */
  div[player-id="P2"] h2 > span {
    top: 18rem; /* Adjust as needed */
    left: 2rem;
  }
  div[player-id="P2"] h4 > span {
    top: 17rem; /* Adjust as needed */
    left: 2.3rem;
  }
}
.lead h2 {
  color: white;
  position: absolute;
  font-size: 1rem;
  text-align: center;
  width: 100vw;
  left: 50%;
  transform: translateX(-50%);
}

canvas {
  z-index: 3;
}

.game_wrapper {
  display: flex;
  justify-content: center;
}

.game {
  width: 100%;
  max-width: 580px; /* Adjust as needed */
}

.side {
  flex-grow: 1;
}

@media (max-width: 580px) {
  /* Adjust as needed */
  .side {
    display: none;
  }
}
